/* tslint:disable */
/* eslint-disable */
/**
 * auth
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * defines the structure of an API error response
 * @export
 * @interface APIError
 */
export interface APIError {
    /**
     * 
     * @type {string}
     * @memberof APIError
     */
    message: string;
    /**
     * 
     * @type {number}
     * @memberof APIError
     */
    code: number;
    /**
     * 
     * @type {string}
     * @memberof APIError
     */
    internal: string;
    /**
     * 
     * @type {object}
     * @memberof APIError
     */
    errors?: object;
}

/**
 * Check if a given object implements the APIError interface.
 */
export function instanceOfAPIError(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "message" in value;
    isInstance = isInstance && "code" in value;
    isInstance = isInstance && "internal" in value;

    return isInstance;
}

export function APIErrorFromJSON(json: any): APIError {
    return APIErrorFromJSONTyped(json, false);
}

export function APIErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): APIError {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'message': json['message'],
        'code': json['code'],
        'internal': json['internal'],
        'errors': !exists(json, 'errors') ? undefined : json['errors'],
    };
}

export function APIErrorToJSON(value?: APIError | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'message': value.message,
        'code': value.code,
        'internal': value.internal,
        'errors': value.errors,
    };
}

