openapi: 3.0.0

info:
  title: core
  version: 0.0.1

paths:
  /core/repos:
    post:
      summary: Create repo
      description: Create repo
      operationId: create-repo
      security:
        - BearerAuth: []
        - APIKeyAuth: []
      tags:
        - core
      requestBody:
        description: Repo
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RepoCreateRequest"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Repo"
        "400":
          $ref: "../../shared/v1/schema.yaml#/components/responses/BadRequest"
        "401":
          $ref: "../../shared/v1/schema.yaml#/components/responses/Unauthorized"
        "500":
          $ref: "../../shared/v1/schema.yaml#/components/responses/InternalServerError"

    get:
      summary: List Repos
      description: List Repos
      operationId: list-repos
      security:
        - BearerAuth: []
        - APIKeyAuth: []
      tags:
        - core
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepoListResponse"
        "400":
          $ref: "../../shared/v1/schema.yaml#/components/responses/BadRequest"
        "401":
          $ref: "../../shared/v1/schema.yaml#/components/responses/Unauthorized"
        "500":
          $ref: "../../shared/v1/schema.yaml#/components/responses/InternalServerError"
  /core/repos/{id}:
    get:
      summary: Get repo
      description: Get repo
      operationId: get-repo
      security:
        - BearerAuth: []
        - APIKeyAuth: []
      tags:
        - core
      parameters:
        - name: id
          in: path
          description: Repo ID
          required: true
          schema:
            type: string
            format: uuid
            x-go-type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Repo"
        "400":
          $ref: "../../shared/v1/schema.yaml#/components/responses/BadRequest"
        "401":
          $ref: "../../shared/v1/schema.yaml#/components/responses/Unauthorized"
        "404":
          $ref: "../../shared/v1/schema.yaml#/components/responses/NotFound"
        "500":
          $ref: "../../shared/v1/schema.yaml#/components/responses/InternalServerError"

components:
  securitySchemes:
    BearerAuth:
      $ref: "../../shared/v1/schema.yaml#/components/securitySchemes/BearerAuth"
    APIKeyAuth:
      $ref: "../../shared/v1/schema.yaml#/components/securitySchemes/APIKeyAuth"

  schemas:
    Repo:
      type: object
      x-breu-entity: repos
      x-breu-entity-type: cql
      properties:
        name:
          type: string
        id:
          type: string
          format: uuid
          x-go-name: ID
          x-go-type: gocql.UUID
          x-entity-part-key: true # cassandra part key
        team_id:
          type: string
          format: uuid
          x-go-name: TeamID
          x-go-type: gocql.UUID
          x-entity-part-key: true # cassandra part key
        stack_id:
          type: string
          format: uuid
          x-go-name: StackID
          x-go-type: gocql.UUID
        provider:
          $ref: "#/components/schemas/RepoProvider"
        provider_id:
          type: string
          x-go-name: ProviderID
        ctrl_id:
          description: |
            references the id field of the repos tables against the provider. For us, this means, that it will be the id field for
              - github_repos
              - gitlab_repos
            etc.
          type: string
          format: uuid
          x-go-name: CtrlID
          x-go-type: gocql.UUID
        default_branch:
          type: string
        is_monorepo:
          type: boolean
        message_provider:
          $ref: "#/components/schemas/MessageProvider"
        message_provider_data:
          $ref: "#/components/schemas/MessageProviderData"
        threshold:
          type: integer
          format: int64
          x-go-type: shared.Int64
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - name
        - id
        - team_id
        - stack_id
        - provider
        - provider_id
        - ctrl_id
        - default_branch
        - is_monorepo
        - message_provider
        - message_provider_data
        - threshold
        - created_at
        - updated_at

    RepoProviderData:
      type: object
      properties:
        name:
          type: string
        default_branch:
          type: string
      required:
        - name
        - default_branch

    RepoProvider:
      type: string
      enum:
        - github
        - gitlab
        - bitbucket

    CloudProvider:
      type: string
      description: "aws, gcp, azure"
      enum:
        - AWS
        - GCP
        - Azure

    MessageProvider:
      type: string
      enum:
        - none
        - slack

    MessageProviderData:
      type: object
      properties:
        slack:
          $ref: "#/components/schemas/MessageProviderSlackData"

    MessageProviderSlackData:
      type: object
      properties:
        bot_token:
          type: string
        channel_id:
          type: string
          x-go-name: ChannelID
        channel_name:
          type: string
        workspace_id:
          type: string
          x-go-name: WorkspaceID
        workspace_name:
          type: string
      required:
        - bot_token
        - channel_id
        - channel_name
        - workspace_id
        - workspace_name

    BranchChanges:
      type: object
      description: Branch changes lines exceed
      properties:
        repo_url:
          type: string
          description: Repo url
        changes:
          type: integer
          description: Total number of changes
        additions:
          type: integer
          description: Number of additions
        deletions:
          type: integer
          description: Number of deletions
        compare_url:
          type: string
          description: Compare url
        file_count:
          type: integer
          description: Number of changed files
        files:
          type: array
          items:
            type: string
          description: List of changed files

      required:
        - repo_url
        - changes
        - additions
        - deletions
        - compare_url
        - file_count
        - files

    LatestCommit:
      type: object
      description: get the latest commit information
      properties:
        repo_name:
          type: string
        repo_url:
          type: string
        branch:
          type: string
        sha:
          type: string
          x-go-name: SHA
        commit_url:
          type: string
      required:
        - repo_name
        - repo_url
        - branch
        - sha
        - commit_url
