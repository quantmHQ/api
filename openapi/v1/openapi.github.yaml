openapi: 3.0.0
info:
  title: github
  version: 0.0.1

paths:
  /providers/github/cicd-result:
    post:
      summary: Receive result from github action CICD
      description: Receive result from github action CICD
      operationId: github-action-result
      requestBody:
        description: Github action result
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GithubActionResultRequest"
      responses:
        "200":
          description: OK
        "500":
          $ref: "../../shared/openapi.spec.yaml#/components/responses/InternalServerError"

  /providers/github/webhook:
    post:
      summary: Webhook reciever for github
      description: |
        Webhook reciever for github.
        TODO: implement openapi generator.
      operationId: github-webhook
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowResponse"
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowResponse"
        "400":
          $ref: "../../shared/openapi.spec.yaml#/components/responses/BadRequest"
        "500":
          $ref: "../../shared/openapi.spec.yaml#/components/responses/InternalServerError"

  /providers/github/complete-installation:
    post:
      summary: Complete GitHub App installation
      description: Complete GitHub App installation
      operationId: github-complete-installation
      security:
        - BearerAuth: []
        - APIKeyAuth: []
      tags:
        - providers
        - github
      requestBody:
        description: GitHub App installation
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompleteInstallationRequest"
      responses:
        "200":
          description: GitHub App installation completed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowResponse"
        "201":
          description: GitHub App installation completed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowResponse"
        "400":
          $ref: "../../shared/openapi.spec.yaml#/components/responses/BadRequest"
        "401":
          $ref: "../../shared/openapi.spec.yaml#/components/responses/Unauthorized"
        "404":
          $ref: "../../shared/openapi.spec.yaml#/components/responses/NotFound"
        "500":
          $ref: "../../shared/openapi.spec.yaml#/components/responses/InternalServerError"

  /providers/github/repos:
    get:
      summary: Get GitHub repositories
      description: List all the github repositories registered with ctrlplane with user's team id
      operationId: github-get-repos
      security:
        - BearerAuth: []
        - APIKeyAuth: []
      tags:
        - providers
        - github
      responses:
        "200":
          description: GitHub repositories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GithubRepo"
        "400":
          $ref: "../../shared/openapi.spec.yaml#/components/responses/BadRequest"
        "401":
          $ref: "../../shared/openapi.spec.yaml#/components/responses/Unauthorized"
        "500":
          $ref: "../../shared/openapi.spec.yaml#/components/responses/InternalServerError"

  /providers/github/installations:
    get:
      summary: Get GitHub installations
      description: List all the github installations registered with ctrlplane
      operationId: github-get-installations
      security:
        - BearerAuth: []
        - APIKeyAuth: []
      tags:
        - providers
        - github
      responses:
        "200":
          description: GitHub installations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GithubInstallation"
        "400":
          $ref: "../../shared/openapi.spec.yaml#/components/responses/BadRequest"
        "401":
          $ref: "../../shared/openapi.spec.yaml#/components/responses/Unauthorized"
        "500":
          $ref: "../../shared/openapi.spec.yaml#/components/responses/InternalServerError"

  /providers/github/artifact-ready:
    post:
      summary: GitHub release artifact ready
      description: Inform qunatum that release artifact is ready for
      operationId: github-artifact-ready
      security:
        - APIKeyAuth: []
      tags:
        - providers
        - github
      requestBody:
        description: GitHub release artifact ready
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ArtifactReadyRequest"
      responses:
        "200":
          description: "to fill"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WorkflowResponse"
        "400":
          $ref: "../../shared/openapi.spec.yaml#/components/responses/BadRequest"
        "401":
          $ref: "../../shared/openapi.spec.yaml#/components/responses/Unauthorized"
        "500":
          $ref: "../../shared/openapi.spec.yaml#/components/responses/InternalServerError"

  /providers/github/cli-git-merge:
    post:
      summary: Receive git merge command from quantm cli
      description: Receive git merge command from quantm cli
      operationId: cli-git-merge
      requestBody:
        description: github repo and branch
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CliGitMerge"
      responses:
        "200":
          description: OK
        "500":
          $ref: "../../shared/openapi.spec.yaml#/components/responses/InternalServerError"

components:
  securitySchemes:
    BearerAuth:
      $ref: "../../shared/openapi.spec.yaml#/components/securitySchemes/BearerAuth"
    APIKeyAuth:
      $ref: "../../shared/openapi.spec.yaml#/components/securitySchemes/APIKeyAuth"

  schemas:
    GithubRepo:
      type: object
      x-go-name: Repo
      x-breu-entity: github_repos
      properties:
        id:
          type: string
          format: uuid
          x-go-name: ID
          x-go-type: gocql.UUID
        github_id:
          type: integer
          format: int64
          x-go-name: GithubID
        team_id:
          type: string
          format: uuid
          x-go-name: TeamID
          x-go-type: gocql.UUID
        installation_id:
          type: integer
          format: int64
          x-go-name: InstallationID
        name:
          type: string
        full_name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - github_id
        - team_id
        - installation_id
        - name
        - full_name
        - created_at
        - updated_at

    ArtifactReadyRequest:
      type: object
      x-breu-entity: github_artifact
      properties:
        pull_request_id:
          type: string
          x-go-name: PullRequestID
        repo_id:
          type: string
          x-go-name: RepoID
        image:
          type: string
        installation_id:
          type: string
          x-go-name: InstallationID
        registry:
          $ref: "#/components/schemas/OCIImageRegistry"
        digest:
          type: string
      required:
        - pull_request_id
        - repo_id
        - image
        - installation_id
        - registry
        - digest

    GithubInstallation:
      type: object
      x-go-name: Installation
      x-breu-entity: github_installations
      properties:
        id:
          type: string
          format: uuid
          x-go-name: ID
          x-go-type: gocql.UUID
        team_id:
          type: string
          format: uuid
          x-go-name: TeamID
          x-go-type: gocql.UUID
        installation_id:
          type: integer
          format: int64
          x-go-name: InstallationID
          x-oapi-codegen-extra-tags:
            validate: required,db_unique
        installation_login:
          type: string
        installation_type:
          type: string
        sender_id:
          type: integer
          format: int64
          x-go-name: SenderID
        sender_login:
          type: string
        status:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - team_id
        - installation_id
        - installation_login
        - installation_type
        - sender_id
        - sender_login
        - status
        - created_at
        - updated_at

    CliGitMerge:
      type: object
      description: branch name and repo info is sent to quantm via quantum-cli
      properties:
        repo_name:
          type: string
          x-go-name: RepoName
        repo_owner:
          type: string
          x-go-name: RepoOwner
        branch:
          type: string
          x-go-name: Branch
      required:
        - repo_name
        - repo_owner
        - branch

    GithubActionResultRequest:
      type: object
      description: github action result is sent to quantum along with branch name
      properties:
        repo_id:
          type: string
          x-go-name: RepoID
        repo_name:
          type: string
          x-go-name: RepoName
        repo_owner:
          type: string
          x-go-name: RepoOwner
        branch:
          type: string
        result:
          type: string
      required:
        - result
        - branch
        - repo_owner
        - repo_name
        - repo_id

    CompleteInstallationRequest:
      type: object
      description: complete the installation given the installation_id & setup_action
      properties:
        installation_id:
          type: integer
          format: int64
          x-go-name: InstallationID
        setup_action:
          $ref: "#/components/schemas/SetupAction"
      required:
        - installation_id
        - setup_action

    SetupAction:
      type: string
      enum:
        - created
        - updated
        - deleted

    OCIImageRegistry:
      type: string
      enum:
        - GCPArtifactRegistry
        - GCPContainerRegistry

    WorkflowResponse:
      type: object
      description: workflow status & run id
      properties:
        run_id:
          type: string
          x-go-name: RunID
        status:
          $ref: "#/components/schemas/WorkflowStatus"
      required:
        - run_id
        - status

    WorkflowStatus:
      type: string
      description: the workflow status
      enum:
        - success
        - failure
        - queued
        - signaled
        - skipped
