syntax = "proto3";

package ctrlplane.core.v1;

import "google/protobuf/timestamp.proto";

// Represents a core repo within the control plane.
message Repo {
  string id = 1;
  google.protobuf.Timestamp created_at = 2;
  google.protobuf.Timestamp updated_at = 3;
  string name = 4;
  string provider = 5; // TODO - implement hooks
  string provider_id = 6;
  string default_branch = 7;
  string is_monorepo = 8;
  string threshold = 9;
  string stale_duration = 10;
  string org_id = 11;
}

// Request to create a org's core repo.
message CreateRepoRequest {
  string name = 1;
  string provider = 2;
  string provider_id = 3;
  string default_branch = 4;
  string is_monorepo = 5;
  string threshold = 6;
  string stale_duration = 7;
  string org_id = 8;
}

// Response containing org's core repo.
message CreateRepoResponse {
  Repo repo = 1;
}

// Request to get org's core repo by id.
message GetRepoByIDRequest {
  string id = 1;
}

// Response to get org's core repo.
message GetRepoByIDResponse {
  Repo repo = 1;
}

// Request to get org's core repo by org_id.
message GetOrgReposByOrgIDRequest {
  string org_id = 1;
}

// Response to get org's core repo.
message GetOrgReposByOrgIDResponse {
  Repo repo = 1;
}

service RepoService {
  // Create org's core repo.
  rpc CreateRepo(CreateRepoRequest) returns (CreateRepoResponse);

  // Get org's core repo by id.
  rpc GetRepoByID(GetRepoByIDRequest) returns (GetRepoByIDResponse);

  // Get org's core repo by org_id.
  rpc GetOrgReposByOrgID(GetOrgReposByOrgIDRequest) returns (GetOrgReposByOrgIDResponse);
}
