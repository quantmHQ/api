syntax = "proto3";

package ctrlplane.auth.v1;

import "ctrlplane/common/v1/uuid.proto";
import "google/protobuf/timestamp.proto";

enum Provider {
  PROVIDER_UNSPECIFIED = 0;
  PROVIDER_GOOGLE = 1;
  PROVIDER_GITHUB = 2;
}

message Account {
  ctrlplane.common.v1.UUID id = 1;
  google.protobuf.Timestamp created_at = 2;
  google.protobuf.Timestamp updated_at = 3;
  ctrlplane.common.v1.UUID user_id = 4;
  Provider provider = 5;
  string provider_account_id = 6;
  google.protobuf.Timestamp expires_at = 7;
  string kind = 8; // Using "kind" instead of "type" which is a reserved word
}

message GetAccountByProviderAccountIDRequest {
  Provider provider = 1;
  string provider_account_id = 2;
}

message GetAccountByProviderAccountIDResponse {
  Account account = 1;
}

message GetAccountsByUserIDRequest { // Pluralized for multiple accounts
  ctrlplane.common.v1.UUID user_id = 1;
}

message GetAccountsByUserIDResponse { // Pluralized for multiple accounts
  repeated Account accounts = 1; // Repeated field for multiple accounts
}

message CreateAccountRequest {
  ctrlplane.common.v1.UUID user_id = 1;
  Provider provider = 2;
  string provider_account_id = 3;
  google.protobuf.Timestamp expires_at = 4;
  string kind = 5; // Using "kind" instead of "type"
}

message CreateAccountResponse {
  Account account = 1;
}

message GetAccountByIDRequest {
  ctrlplane.common.v1.UUID id = 1;
}

message GetAccountByIDResponse {
  Account account = 1;
}

service AccountService {
  rpc GetAccountByProviderAccountID(GetAccountByProviderAccountIDRequest) returns (GetAccountByProviderAccountIDResponse);
  rpc GetAccountsByUserID(GetAccountsByUserIDRequest) returns (GetAccountsByUserIDResponse); // Updated method signature
  rpc CreateAccount(CreateAccountRequest) returns (CreateAccountResponse);
  rpc GetAccountByID(GetAccountByIDRequest) returns (GetAccountByIDResponse);
}
