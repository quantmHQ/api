syntax = "proto3";

package ctrlplane.auth.v1;

import "ctrlplane/common/v1/enums.proto";
import "google/protobuf/timestamp.proto";

message OrgHooks {
  ctrlplane.common.v1.RepoHook repo = 1;
  ctrlplane.common.v1.MessagingHook messaging = 2;
}

// Represents an organization within the control plane.
message Org {
  string id = 1;
  google.protobuf.Timestamp created_at = 2;
  google.protobuf.Timestamp updated_at = 3;
  string name = 4;
  string domain = 5;
  string slug = 6;
  OrgHooks hooks = 7;
}

// Request to create a new organization.
message CreateOrgRequest {
  string name = 1;
  string domain = 2;
  string slug = 3;
}

// Response containing the newly created organization.
message CreateOrgResponse {
  Org org = 1;
}

// Request to retrieve an organization by its unique identifier.
message GetOrgByIDRequest {
  string id = 1;
}

// Response containing the retrieved organization.
message GetOrgByIDResponse {
  Org org = 1;
}

// Request to update an existing organization.
message UpdateOrgByIDRequest {
  string name = 1;
  string slug = 2;
}

// Response containing the updated organization.
message UpdateOrgByIDResponse {
  Org org = 1;
}

// Service providing methods for managing organizations within the control
// plane.
service OrgService {
  // Creates a new organization.
  rpc CreateOrg(CreateOrgRequest) returns (CreateOrgResponse);

  // Retrieves an organization by its globally unique identifier.
  rpc GetOrgByID(GetOrgByIDRequest) returns (GetOrgByIDResponse);

  // Updates an existing organization.
  rpc UpdateOrgByID(UpdateOrgByIDRequest) returns (UpdateOrgByIDResponse);
}
