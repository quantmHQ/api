syntax = "proto3";

package ctrlplane.auth.v1;

import "ctrlplane/common/v1/uuid.proto";
import "google/protobuf/timestamp.proto";

// User represents a user in the system. For security, the password is not
// included in this message.
message User {
  ctrlplane.common.v1.UUID id = 1;
  google.protobuf.Timestamp created_at = 2;
  google.protobuf.Timestamp updated_at = 3;
  ctrlplane.common.v1.UUID org_id = 4;
  string email = 5;
  string first_name = 6;
  string last_name = 7;
  bool is_active = 8;
  bool is_verified = 9;
}

message CreateUserRequest {
  string email = 1;
  string first_name = 2;
  string last_name = 3;
  string domain = 4;
}

message CreateUserResponse {
  User user = 1;
}

message GetUserByEmailRequest {
  string email = 1;
}

message GetUserByEmailResponse {
  User user = 1;
}

message GetUserByIDRequest {
  ctrlplane.common.v1.UUID id = 1;
}

message GetUserByIDResponse {
  User user = 1;
}

message UpdateUserRequest {
  User user = 1;
}

message UpdateUserResponse {
  User user = 1;
}

service UserService {
// CreateUser creates a new user, associating it with the given domain. Domains are unique to organizations.
// If the domain is not registered, this method will create a new organization and assign the user to it.
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);

  rpc GetUserByEmail(GetUserByEmailRequest) returns (GetUserByEmailResponse);
  rpc GetUserByID(GetUserByIDRequest) returns (GetUserByIDResponse);

  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
}
